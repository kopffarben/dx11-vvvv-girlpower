#include "BlendFunctions.fxh"
#include "KeyingFunction.fxh"

float2 R:TARGETSIZE;

SamplerState s0 <bool visible=false;string uiname="Sampler";> {Filter=MIN_MAG_MIP_LINEAR;AddressU=WRAP;AddressV=WRAP;};

cbuffer controls:register(b0){	
	float Alpha1 <float uimin = 0.0f; float uimax = 1.0; string uiname = "Alpha Texture 1";> = 0.0f;
	float3 tsa1 <float uimin=0.0; float uimax=1.0;> = 0.0f; // tsa = Threshold, Smooth, AlphaBlur
	bool Invert1=0;
	
	float Alpha2 <float uimin = 0.0f; float uimax = 1.0; string uiname = "Alpha Texture 2";> = 0.0f;
	float3 tsa2 <float uimin=0.0; float uimax=1.0;> = 0.0f; // tsa = Threshold, Smooth, AlphaBlur
	bool Invert2=0;
	
	float Alpha3 <float uimin = 0.0f; float uimax = 1.0; string uiname = "Alpha Texture 3";> = 0.0f;
	float3 tsa3 <float uimin=0.0; float uimax=1.0;> = 0.0f; // tsa = Threshold, Smooth, AlphaBlur
	bool Invert3=0;
	
	float Alpha4 <float uimin = 0.0f; float uimax = 1.0; string uiname = "Alpha Texture 4";> = 0.0f;
	float3 tsa4 <float uimin=0.0; float uimax=1.0;> = 0.0f; // tsa = Threshold, Smooth, AlphaBlur
	bool Invert4=0;
	
	float Alpha5 <float uimin = 0.0f; float uimax = 1.0; string uiname = "Alpha Texture 5";> = 0.0f;
	float3 tsa5 <float uimin=0.0; float uimax=1.0;> = 0.0f; // tsa = Threshold, Smooth, AlphaBlur
	bool Invert5=0;
	
	float Alpha6 <float uimin = 0.0f; float uimax = 1.0; string uiname = "Alpha Texture 6";> = 0.0f;
	float3 tsa6 <float uimin=0.0; float uimax=1.0;> = 0.0f; // tsa = Threshold, Smooth, AlphaBlur
	bool Invert6=0;
	
	float Alpha7 <float uimin = 0.0f; float uimax = 1.0; string uiname = "Alpha Texture 7";> = 0.0f;
	float3 tsa7 <float uimin=0.0; float uimax=1.0;> = 0.0f; // tsa = Threshold, Smooth, AlphaBlur
	bool Invert7=0;
	
	bool SourceAlpha <bool visible=false;> =0;
	bool Premultiply <bool visible=false;> =0;
}

Texture2D tex0: PREVIOUS; //Background Texture
Texture2D tex1, tex2, tex3, tex4, tex5, tex6, tex7;
Texture2D texMask1 <string uiname = "Mask Texture 1";>;
Texture2D texMask2 <string uiname = "Mask Texture 2";>;
Texture2D texMask3 <string uiname = "Mask Texture 3";>;
Texture2D texMask4 <string uiname = "Mask Texture 4";>;
Texture2D texMask5 <string uiname = "Mask Texture 5";>;
Texture2D texMask6 <string uiname = "Mask Texture 6";>;
Texture2D texMask7 <string uiname = "Mask Texture 7";>;

iBlender Layer1 <string uiname = "Blend Mode 1"; string linkclass = "Normal,Add,Substract,Screen,Multiply,Darken,Lighten,Difference,Exclusion,Overlay,Hardlight,Softlight,Dodge,Burn,Reflect,Glow,Freeze,Heat,Divide";>;
iBlender Layer2 <string uiname = "Blend Mode 2"; string linkclass = "Normal,Add,Substract,Screen,Multiply,Darken,Lighten,Difference,Exclusion,Overlay,Hardlight,Softlight,Dodge,Burn,Reflect,Glow,Freeze,Heat,Divide";>;
iBlender Layer3 <string uiname = "Blend Mode 3"; string linkclass = "Normal,Add,Substract,Screen,Multiply,Darken,Lighten,Difference,Exclusion,Overlay,Hardlight,Softlight,Dodge,Burn,Reflect,Glow,Freeze,Heat,Divide";>;
iBlender Layer4 <string uiname = "Blend Mode 4"; string linkclass = "Normal,Add,Substract,Screen,Multiply,Darken,Lighten,Difference,Exclusion,Overlay,Hardlight,Softlight,Dodge,Burn,Reflect,Glow,Freeze,Heat,Divide";>;
iBlender Layer5 <string uiname = "Blend Mode 5"; string linkclass = "Normal,Add,Substract,Screen,Multiply,Darken,Lighten,Difference,Exclusion,Overlay,Hardlight,Softlight,Dodge,Burn,Reflect,Glow,Freeze,Heat,Divide";>;
iBlender Layer6 <string uiname = "Blend Mode 6"; string linkclass = "Normal,Add,Substract,Screen,Multiply,Darken,Lighten,Difference,Exclusion,Overlay,Hardlight,Softlight,Dodge,Burn,Reflect,Glow,Freeze,Heat,Divide";>;
iBlender Layer7 <string uiname = "Blend Mode 7"; string linkclass = "Normal,Add,Substract,Screen,Multiply,Darken,Lighten,Difference,Exclusion,Overlay,Hardlight,Softlight,Dodge,Burn,Reflect,Glow,Freeze,Heat,Divide";>;

iKeying Keying1 <string uiname = "Keying Mode 1"; string linkclass = "Luma,Saturation,Red,Green,Blue,Alpha";>;
iKeying Keying2 <string uiname = "Keying Mode 2"; string linkclass = "Luma,Saturation,Red,Green,Blue,Alpha";>;
iKeying Keying3 <string uiname = "Keying Mode 3"; string linkclass = "Luma,Saturation,Red,Green,Blue,Alpha";>;
iKeying Keying4 <string uiname = "Keying Mode 4"; string linkclass = "Luma,Saturation,Red,Green,Blue,Alpha";>;
iKeying Keying5 <string uiname = "Keying Mode 5"; string linkclass = "Luma,Saturation,Red,Green,Blue,Alpha";>;
iKeying Keying6 <string uiname = "Keying Mode 6"; string linkclass = "Luma,Saturation,Red,Green,Blue,Alpha";>;
iKeying Keying7 <string uiname = "Keying Mode 7"; string linkclass = "Luma,Saturation,Red,Green,Blue,Alpha";>;

float4 pBlender(float4 PosWVP: SV_POSITION, float2 uv: TEXCOORD0): SV_Target
{
	float4 c0 = tex0.Sample(s0, uv);
	float4 c1 = tex1.Sample(s0, uv);
	float4 c2 = tex2.Sample(s0, uv);
	float4 c3 = tex3.Sample(s0, uv);
	float4 c4 = tex4.Sample(s0, uv);
	float4 c5 = tex5.Sample(s0, uv);
	float4 c6 = tex6.Sample(s0, uv);
	float4 c7 = tex7.Sample(s0, uv);
	
	float4 colkeyed0 = Keying1.Keying(texMask1, s0, uv, R, tsa1.x, tsa1.y, tsa1.z,Invert1, SourceAlpha, Premultiply);	
	float4 col1 = Layer1.Blend(c0, float4(c1.rgb, colkeyed0.a), Alpha1);
	
	float4 colkeyed1 = Keying2.Keying(texMask2, s0, uv, R, tsa2.x, tsa2.y, tsa2.z,Invert2, SourceAlpha, Premultiply);
	float4 col2 = Layer2.Blend(col1, float4(c2.rgb, colkeyed1.a), Alpha2);
	
	float4 colkeyed2 = Keying3.Keying(texMask3, s0, uv, R, tsa3.x, tsa3.y, tsa3.z,Invert3, SourceAlpha, Premultiply);
	float4 col3 = Layer3.Blend(col2, float4(c3.rgb, colkeyed2.a), Alpha3);
	
	float4 colkeyed3 = Keying4.Keying(texMask4, s0, uv, R, tsa4.x, tsa4.y, tsa4.z,Invert4, SourceAlpha, Premultiply);
	float4 col4 = Layer4.Blend(col3, float4(c4.rgb, colkeyed3.a), Alpha4);
	
	float4 colkeyed4 = Keying5.Keying(texMask5, s0, uv, R, tsa5.x, tsa5.y, tsa5.z,Invert5, SourceAlpha, Premultiply);
	float4 col5 = Layer5.Blend(col4, float4(c5.rgb, colkeyed4.a), Alpha5);
	
	float4 colkeyed5 = Keying6.Keying(texMask6, s0, uv, R, tsa6.x, tsa6.y, tsa6.z,Invert6, SourceAlpha, Premultiply);
	float4 col6 = Layer6.Blend(col5, float4(c6.rgb, colkeyed5.a), Alpha6);
	
	float4 colkeyed6 = Keying7.Keying(texMask7, s0, uv, R, tsa7.x, tsa7.y, tsa7.z,Invert7, SourceAlpha, Premultiply);
	float4 col7 = Layer7.Blend(col6, float4(c7.rgb, colkeyed6.a), Alpha7);
	
	return col7;
}

technique11 Blender
{
	pass P0 
	{ SetPixelShader(CompileShader(ps_5_0, pBlender())); }
} 